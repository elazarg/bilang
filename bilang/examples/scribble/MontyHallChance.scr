module Game;

type <java> "java.lang.Integer" from "rt.jar" as door;
type <java> "java.lang.Integer" from "rt.jar" as int;
type <java> "java.lang.Boolean" from "rt.jar" as bool;
type <java> "java.lang.Integer" from "rt.jar" as hidden;

explicit global protocol MontyHallChance(role Server, role Guest){
    connect Server to Host;
    Broadcast() from Server to Guest;
    connect Server to Guest;
    Broadcast() from Server to ;
    Hidden_car(hidden) from Host to Server;
    Broadcast() from Server to Guest;
    Public_d(door) from Guest to Server;
    Broadcast_d(door) from Server to ;
    Public_goat(door) from Host to Server;
    Broadcast_goat(door) from Server to Guest;
    Public_switch(bool) from Guest to Server;
    Broadcast_switch(bool) from Server to ;
    Reveal_car(door) from Host to Server;
    Broadcast_car(door) from Server to Guest;
    Withdraw() from Guest to Server;
    Withdraw() from Host to Server;
}


local protocol MontyHallChance_Guest(role Server, role Guest){
    Broadcast() from Server;
    accept Server;
    Broadcast() from Server;
    Public_d(door) to Server;
    Broadcast_goat(door) from Server;
    Public_switch(bool) to Server;
    Broadcast_car(door) from Server;
    Withdraw() to Server;
}


local protocol MontyHallChance_Server(role Server, role Guest){
    Broadcast() to Guest;
    Broadcast() to ;
    Hidden_car(hidden) from Host;
    Broadcast() to Guest;
    Public_d(door) from Guest;
    Broadcast_d(door) to ;
    Public_goat(door) from Host;
    Broadcast_goat(door) to Guest;
    Public_switch(bool) from Guest;
    Broadcast_switch(bool) to ;
    Reveal_car(door) from Host;
    Broadcast_car(door) to Guest;
    Withdraw() from Guest;
    Withdraw() from Host;
}
