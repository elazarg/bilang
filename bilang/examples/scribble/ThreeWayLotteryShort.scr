module Game;

type <java> "java.lang.Integer" from "rt.jar" as choice;
type <java> "java.lang.Integer" from "rt.jar" as int;
type <java> "java.lang.Boolean" from "rt.jar" as bool;
type <java> "java.lang.Integer" from "rt.jar" as hidden;

explicit global protocol ThreeWayLotteryShort(role Server, role Issuer, role Alice, role Bob){
    connect Server to Issuer;
    connect Server to Alice;
    connect Server to Bob;
    Public_c(choice) from Issuer to Server;
    Broadcast_c(choice) from Server to Alice, Bob;
    Public_c(choice) from Alice to Server;
    Broadcast_c(choice) from Server to Issuer, Bob;
    Public_c(choice) from Bob to Server;
    Broadcast_c(choice) from Server to Issuer, Alice;
    Withdraw() from Bob to Server;
    Withdraw() from Issuer to Server;
    Withdraw() from Alice to Server;
}


local protocol ThreeWayLotteryShort_Issuer(role Server, role Issuer){
    accept Server;
    Public_c(choice) to Server;
    Broadcast_c(choice) from Server;
    Broadcast_c(choice) from Server;
    Withdraw() to Server;
}


local protocol ThreeWayLotteryShort_Alice(role Server, role Alice){
    accept Server;
    Broadcast_c(choice) from Server;
    Public_c(choice) to Server;
    Broadcast_c(choice) from Server;
    Withdraw() to Server;
}


local protocol ThreeWayLotteryShort_Bob(role Server, role Bob){
    accept Server;
    Broadcast_c(choice) from Server;
    Broadcast_c(choice) from Server;
    Public_c(choice) to Server;
    Withdraw() to Server;
}


local protocol ThreeWayLotteryShort_Server(role Server, role Issuer, role Alice, role Bob){
    Public_c(choice) from Issuer;
    Broadcast_c(choice) to Alice, Bob;
    Public_c(choice) from Alice;
    Broadcast_c(choice) to Issuer, Bob;
    Public_c(choice) from Bob;
    Broadcast_c(choice) to Issuer, Alice;
    Withdraw() from Bob;
    Withdraw() from Issuer;
    Withdraw() from Alice;
}
