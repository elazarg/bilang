def visit_AST(self): pass
def visit_mod(self): pass
def visit_Module(self, body): pass
def visit_Interactive(self, body): pass
def visit_Expression(self, body): pass
def visit_Suite(self, body): pass
def visit_stmt(self): pass
def visit_FunctionDef(self, name, args, body, decorator_list, returns): pass
def visit_AsyncFunctionDef(self, name, args, body, decorator_list, returns): pass
def visit_ClassDef(self, name, bases, keywords, body, decorator_list): pass
def visit_Return(self, value): pass
def visit_Delete(self, targets): pass
def visit_Assign(self, targets, value): pass
def visit_AugAssign(self, target, op, value): pass
def visit_AnnAssign(self, target, annotation, value, simple): pass
def visit_For(self, target, iter, body, orelse): pass
def visit_AsyncFor(self, target, iter, body, orelse): pass
def visit_While(self, test, body, orelse): pass
def visit_If(self, test, body, orelse): pass
def visit_With(self, items, body): pass
def visit_AsyncWith(self, items, body): pass
def visit_Raise(self, exc, cause): pass
def visit_Try(self, body, handlers, orelse, finalbody): pass
def visit_Assert(self, test, msg): pass
def visit_Import(self, names): pass
def visit_ImportFrom(self, module, names, level): pass
def visit_Global(self, names): pass
def visit_Nonlocal(self, names): pass
def visit_Expr(self, value): pass
def visit_Pass(self): pass
def visit_Break(self): pass
def visit_Continue(self): pass
def visit_expr(self): pass
def visit_BoolOp(self, op, values): pass
def visit_BinOp(self, left, op, right): pass
def visit_UnaryOp(self, op, operand): pass
def visit_Lambda(self, args, body): pass
def visit_IfExp(self, test, body, orelse): pass
def visit_Dict(self, keys, values): pass
def visit_Set(self, elts): pass
def visit_ListComp(self, elt, generators): pass
def visit_SetComp(self, elt, generators): pass
def visit_DictComp(self, key, value, generators): pass
def visit_GeneratorExp(self, elt, generators): pass
def visit_Await(self, value): pass
def visit_Yield(self, value): pass
def visit_YieldFrom(self, value): pass
def visit_Compare(self, left, ops, comparators): pass
def visit_Call(self, func, args, keywords): pass
def visit_Num(self, n): pass
def visit_Str(self, s): pass
def visit_FormattedValue(self, value, conversion, format_spec): pass
def visit_JoinedStr(self, values): pass
def visit_Bytes(self, s): pass
def visit_NameConstant(self, value): pass
def visit_Ellipsis(self): pass
def visit_Constant(self, value): pass
def visit_Attribute(self, value, attr, ctx): pass
def visit_Subscript(self, value, slice, ctx): pass
def visit_Starred(self, value, ctx): pass
def visit_Name(self, id, ctx): pass
def visit_List(self, elts, ctx): pass
def visit_Tuple(self, elts, ctx): pass
def visit_expr_context(self): pass
def visit_Load(self): pass
def visit_Store(self): pass
def visit_Del(self): pass
def visit_AugLoad(self): pass
def visit_AugStore(self): pass
def visit_Param(self): pass
def visit_slice(self): pass
def visit_Slice(self, lower, upper, step): pass
def visit_ExtSlice(self, dims): pass
def visit_Index(self, value): pass
def visit_boolop(self): pass
def visit_And(self): pass
def visit_Or(self): pass
def visit_operator(self): pass
def visit_Add(self): pass
def visit_Sub(self): pass
def visit_Mult(self): pass
def visit_MatMult(self): pass
def visit_Div(self): pass
def visit_Mod(self): pass
def visit_Pow(self): pass
def visit_LShift(self): pass
def visit_RShift(self): pass
def visit_BitOr(self): pass
def visit_BitXor(self): pass
def visit_BitAnd(self): pass
def visit_FloorDiv(self): pass
def visit_unaryop(self): pass
def visit_Invert(self): pass
def visit_Not(self): pass
def visit_UAdd(self): pass
def visit_USub(self): pass
def visit_cmpop(self): pass
def visit_Eq(self): pass
def visit_NotEq(self): pass
def visit_Lt(self): pass
def visit_LtE(self): pass
def visit_Gt(self): pass
def visit_GtE(self): pass
def visit_Is(self): pass
def visit_IsNot(self): pass
def visit_In(self): pass
def visit_NotIn(self): pass
def visit_comprehension(self, target, iter, ifs, is_async): pass
def visit_excepthandler(self): pass
def visit_ExceptHandler(self, type, name, body): pass
def visit_arguments(self, args, vararg, kwonlyargs, kw_defaults, kwarg, defaults): pass
def visit_arg(self, arg, annotation): pass
def visit_keyword(self, arg, value): pass
def visit_alias(self, name, asname): pass
def visit_withitem(self, context_expr, optional_vars): pass
