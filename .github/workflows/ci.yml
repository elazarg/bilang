name: BiLang CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 25
      uses: actions/setup-java@v4
      with:
        java-version: '25'
        distribution: 'temurin'

    - name: Set up Kotlin
      uses: setup-kotlin/setup-kotlin@v2
      with:
        kotlin-version: '1.9.22' # Using a specific, stable version

    - name: Compile and Run Tests
      run: |
        # Create the build directory
        mkdir -p build

        # Step 1: Compile all Java sources.
        # We must include the kotlin-stdlib.jar in the classpath so javac can resolve `import kotlin.Pair;`
        echo "Compiling Java sources..."
        javac -cp "lib/antlr-4.13.2-complete.jar:$KOTLIN_HOME/lib/kotlin-stdlib.jar" -d build \
          src/bilang/*.java \
          generated/bilangGen/*.java

        # Step 2: Compile Kotlin sources, adding the build directory (with the new Java .class files) to the classpath.
        echo "Compiling Kotlin sources..."
        kotlinc src/bilang/*.kt -cp "build:lib/antlr-4.13.2-complete.jar" -d build

        # Step 3: Run the compiled program. The classpath needs the build directory, the ANTLR lib, and the Kotlin lib.
        echo "Running BiLang compiler..."
        kotlin -cp "build:lib/antlr-4.13.2-complete.jar:$KOTLIN_HOME/lib/kotlin-stdlib.jar" bilang.MainKt

        # Create a directory for the new output to compare against
        mkdir -p new_output/gambit new_output/solidity
        cp examples/gambit/*.efg new_output/gambit/
        cp examples/solidity/*.sol new_output/solidity/

        # Compare generated files with golden masters for correctness
        echo "Comparing generated files with golden masters..."
        diff -r examples/gambit new_output/gambit
        diff -r examples/solidity new_output/solidity
